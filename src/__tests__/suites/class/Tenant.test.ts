import { Settings, Tenant, TenantObject } from '@src/class/Tenant';

const tenantData: TenantObject = {
	id: 'rd-girona-test',
	guid: '00034972-0000-0000-0000-000000000000',
	name: 'rd.girona.test',
	tier_properties: {
		name: 'custom',
		results: {
			online: true,
			social: true
		}
	},
	print_only: false,
	facebook_linked_ids: [
		'157193954975917'
	],
	settings: {
		categorization_mode: 'no_flc',
		currency: 'USD',
		display_influencers: true,
		facebook_url: 'https://www.facebook.com/conjunt.chapo',
		valuation_metric: 'miv'
	} as Settings
};

describe('Tenant class', () => {

	it('should create a new empty Tenant', () => {
		const t = new Tenant();
		expect(t.id).toBeUndefined();
	});

	it('should create a new Tenant with id', () => {
		const t = new Tenant({ id: tenantData.id });
		expect(t.id).toEqual(tenantData.id);
	});

	it('should create a new Tenant with all data', () => {
		const t = new Tenant(tenantData);
		expect(t).toMatchObject(tenantData);
	});

	it('should create a new Tenant and call getTierProperties', () => {
		const t = new Tenant(tenantData);
		expect(t.getTierProperties()).toEqual({ ...tenantData.tier_properties, limit: Infinity });
	});

	it('should create a new Tenant and call hasPrintOnly', () => {
		const t = new Tenant(tenantData);
		expect(t.hasPrintOnly()).toEqual(false);
		t.print_only = true;
		expect(t.hasPrintOnly()).toEqual(true);
	});

	it('should create a new Tenant and call hasSocialMediaTier', () => {
		const t = new Tenant(tenantData);
		expect(t.hasSocialMediaTier()).toEqual(true);
		t.tier_properties.results.social = false;
		expect(t.hasSocialMediaTier()).toEqual(false);
	});

	it('should create a new Tenant no_flc mode and call getAvailableCategories', () => {
		const t = new Tenant(tenantData);
		// eslint-disable-next-line max-len
		const noFlcOutput: string[] = ["01", "0101", "010101", "010102", "02", "0201", "020101", "020102", "020103", "020104", "03", "0301", "030101", "030102", "05", "0501", "050101", "050102", "06", "0601", "060101", "060102", "07", "0701", "070101", "070102", "08", "0801", "080101", "080102", "080103", "10", "1001", "100101", "100102", "11", "1101", "110101", "110102", "13", "1301", "130101", "130102", "14", "1401", "140101", "140102", "140103", "1402", "140201", "140202", "140203", "140204", "140205", "140206", "140207", "140208", "1403", "140301", "140302", "140303", "140304", "140305", "140306", "140307", "140308", "140309", "140310", "140311", "140312", "140313", "1404", "140401", "140402", "140403", "140404", "140405", "140406", "140407", "1405", "140501", "140502", "140503", "140504", "140505", "140506", "140507", "1406", "140601", "140602", "140603", "140604", "140605", "140606", "140607", "140608", "140609", "140610", "140611", "140612", "140613", "140614", "140615", "140616", "140617", "140618", "140619", "1407", "140701", "140702", "140703", "140704", "140705", "140706", "1408", "140801", "140802", "140803", "140804", "140805", "140806", "140807", "140808", "140809", "140810", "1409", "140901", "140902", "140903", "1410", "141001", "141002", "141003", "141004", "141005", "1411", "141101", "141102", "141103", "1412", "141201", "141202", "1413", "141301", "141302", "1414", "141401", "141402", "141403", "141404", "141405", "141406", "141407", "141408", "141409", "141410", "1415", "141501", "141502", "141503", "141504", "141505", "141506", "141507", "141508", "1416", "141601", "141602", "141603", "141604", "141605", "141606", "141607", "141608", "141609", "141610", "141611", "15", "1501", "150101", "150102", "16", "1601", "160101", "160102", "17", "1701", "170101", "170102", "18", "1801", "180101", "180102", "19", "1901", "190101", "190102", "20", "2001", "200101", "200102", "200103", "200104", "21", "2101", "210101", "210102", "210103", "210104", "22", "2201", "220101", "220102", "23", "2301", "230101", "230102", "24", "2401", "240101", "240102", "25", "2501", "250101", "250102", "26", "2601", "260101", "260102", "260103", "260104", "260105", "260106", "2602", "260201", "260202", "260203", "2603", "260301", "260302", "260303", "260304", "27", "2701", "270101", "270102"];
		expect(t.getAvailableCategories()).toEqual(noFlcOutput);
	});

	it('should create a new Tenant flc mode and call getAvailableCategories', () => {
		const t = new Tenant(tenantData);
		t.settings.categorization_mode = "flc";
		// eslint-disable-next-line max-len
		const flcOutput: string[] = ["04", "0401", "040101", "0402", "040201", "040202", "0403", "040301", "040302", "040303", "040304", "040305", "040306", "040307", "040308", "040309", "040310", "040311", "040312", "0404", "040401", "040402", "040403", "040404", "040405", "040406", "040407", "0405", "040501", "040502", "040503", "040504", "040505", "040506", "040507", "040508", "040509", "040510", "040511", "040512", "040513", "0406", "040601", "040602", "0407", "040701", "040702", "040703", "0408", "040801", "040802", "040803", "040804", "040805", "040806", "040807", "040808", "040809", "040810", "040811", "0409", "040901", "040902", "040903", "040904", "040905", "040906", "040907", "040908", "040909", "040910", "040911", "040912", "040913", "0410", "041001", "041002", "041003", "041004", "0411", "041101", "041102", "041103", "041104", "041105", "041106", "041107", "041108", "041109", "041110", "041111", "0412", "041201", "041202", "041203", "0413", "041301", "041302", "0414", "041401", "041402", "041403", "0415", "041501", "041502", "041503", "041504", "041505", "041506", "0416", "041601", "0417", "041701", "0418", "041801", "0419", "041901", "041902", "041903", "041904", "041905", "041906", "041907", "0420", "042001", "09", "0901", "090101", "090102", "090103", "090104", "090105", "090106", "090107", "0902", "090201", "090202", "090203", "090204", "090205", "090206", "090207", "0903", "090301", "090302", "090303", "090304", "090305", "090306", "0904", "090401", "090402", "090403", "090404", "090405", "090406", "0905", "090501", "090502", "090503", "090504", "090505", "090506", "0906", "090601", "090602", "090603", "090604", "090605", "090606", "0907", "090701", "090702", "090703", "090704", "090705", "090706", "090707", "090708", "090709", "0908", "090801", "090802", "090803", "090804", "090805", "090806", "090807", "0909", "090901", "090902", "090903", "090904", "090905", "090906", "090907", "090908", "090909", "090910", "090911", "12", "1201", "120101", "120102", "120103", "120104", "120105", "120106", "120107", "120108", "120109", "120110", "120111", "120112", "120113", "120114", "120115", "120116", "120117", "120118", "120119", "120120", "120121", "120122", "120123", "120124", "1202", "120201", "120202", "120203", "120204", "120205", "120206", "120207", "120208", "120209", "120210", "120211", "120212", "120213", "120214", "120215", "120216", "120217", "120218", "120219", "120220", "120221", "120222", "120223", "120224", "120225", "120226", "120227", "120228", "120229", "120230", "120231", "120232", "120233", "120234", "120235", "120236", "120237", "120238", "120239", "120240", "1203", "120301", "120302", "120303", "120304", "1204", "120401", "120402", "120403", "120404", "120405", "120406", "1205", "120501", "120502", "120503", "120504", "120505", "120506", "120507", "120508", "120509", "120510", "120511", "120512", "120513", "120514", "1206", "120601", "120602", "120603", "120604", "120605", "1207", "120701", "120702", "120703", "120704", "120705", "120706", "120707", "120708", "120709", "120710", "120711", "120712", "1208", "120801", "120802"];
		expect(t.getAvailableCategories()).toEqual(flcOutput);
	});

	it('should create a new Tenant all mode and call getAvailableCategories', () => {
		const t = new Tenant(tenantData);

		t.settings.categorization_mode = "all";
		// eslint-disable-next-line max-len
		const allOutput: string[] = ["01", "0101", "010101", "010102", "02", "0201", "020101", "020102", "020103", "020104", "03", "0301", "030101", "030102", "04", "0401", "040101", "0402", "040201", "040202", "0403", "040301", "040302", "040303", "040304", "040305", "040306", "040307", "040308", "040309", "040310", "040311", "040312", "0404", "040401", "040402", "040403", "040404", "040405", "040406", "040407", "0405", "040501", "040502", "040503", "040504", "040505", "040506", "040507", "040508", "040509", "040510", "040511", "040512", "040513", "0406", "040601", "040602", "0407", "040701", "040702", "040703", "0408", "040801", "040802", "040803", "040804", "040805", "040806", "040807", "040808", "040809", "040810", "040811", "0409", "040901", "040902", "040903", "040904", "040905", "040906", "040907", "040908", "040909", "040910", "040911", "040912", "040913", "0410", "041001", "041002", "041003", "041004", "0411", "041101", "041102", "041103", "041104", "041105", "041106", "041107", "041108", "041109", "041110", "041111", "0412", "041201", "041202", "041203", "0413", "041301", "041302", "0414", "041401", "041402", "041403", "0415", "041501", "041502", "041503", "041504", "041505", "041506", "0416", "041601", "0417", "041701", "0418", "041801", "0419", "041901", "041902", "041903", "041904", "041905", "041906", "041907", "0420", "042001", "05", "0501", "050101", "050102", "06", "0601", "060101", "060102", "07", "0701", "070101", "070102", "08", "0801", "080101", "080102", "080103", "09", "0901", "090101", "090102", "090103", "090104", "090105", "090106", "090107", "0902", "090201", "090202", "090203", "090204", "090205", "090206", "090207", "0903", "090301", "090302", "090303", "090304", "090305", "090306", "0904", "090401", "090402", "090403", "090404", "090405", "090406", "0905", "090501", "090502", "090503", "090504", "090505", "090506", "0906", "090601", "090602", "090603", "090604", "090605", "090606", "0907", "090701", "090702", "090703", "090704", "090705", "090706", "090707", "090708", "090709", "0908", "090801", "090802", "090803", "090804", "090805", "090806", "090807", "0909", "090901", "090902", "090903", "090904", "090905", "090906", "090907", "090908", "090909", "090910", "090911", "10", "1001", "100101", "100102", "11", "1101", "110101", "110102", "12", "1201", "120101", "120102", "120103", "120104", "120105", "120106", "120107", "120108", "120109", "120110", "120111", "120112", "120113", "120114", "120115", "120116", "120117", "120118", "120119", "120120", "120121", "120122", "120123", "120124", "1202", "120201", "120202", "120203", "120204", "120205", "120206", "120207", "120208", "120209", "120210", "120211", "120212", "120213", "120214", "120215", "120216", "120217", "120218", "120219", "120220", "120221", "120222", "120223", "120224", "120225", "120226", "120227", "120228", "120229", "120230", "120231", "120232", "120233", "120234", "120235", "120236", "120237", "120238", "120239", "120240", "1203", "120301", "120302", "120303", "120304", "1204", "120401", "120402", "120403", "120404", "120405", "120406", "1205", "120501", "120502", "120503", "120504", "120505", "120506", "120507", "120508", "120509", "120510", "120511", "120512", "120513", "120514", "1206", "120601", "120602", "120603", "120604", "120605", "1207", "120701", "120702", "120703", "120704", "120705", "120706", "120707", "120708", "120709", "120710", "120711", "120712", "1208", "120801", "120802", "13", "1301", "130101", "130102", "14", "1401", "140101", "140102", "140103", "1402", "140201", "140202", "140203", "140204", "140205", "140206", "140207", "140208", "1403", "140301", "140302", "140303", "140304", "140305", "140306", "140307", "140308", "140309", "140310", "140311", "140312", "140313", "1404", "140401", "140402", "140403", "140404", "140405", "140406", "140407", "1405", "140501", "140502", "140503", "140504", "140505", "140506", "140507", "1406", "140601", "140602", "140603", "140604", "140605", "140606", "140607", "140608", "140609", "140610", "140611", "140612", "140613", "140614", "140615", "140616", "140617", "140618", "140619", "1407", "140701", "140702", "140703", "140704", "140705", "140706", "1408", "140801", "140802", "140803", "140804", "140805", "140806", "140807", "140808", "140809", "140810", "1409", "140901", "140902", "140903", "1410", "141001", "141002", "141003", "141004", "141005", "1411", "141101", "141102", "141103", "1412", "141201", "141202", "1413", "141301", "141302", "1414", "141401", "141402", "141403", "141404", "141405", "141406", "141407", "141408", "141409", "141410", "1415", "141501", "141502", "141503", "141504", "141505", "141506", "141507", "141508", "1416", "141601", "141602", "141603", "141604", "141605", "141606", "141607", "141608", "141609", "141610", "141611", "15", "1501", "150101", "150102", "16", "1601", "160101", "160102", "17", "1701", "170101", "170102", "18", "1801", "180101", "180102", "19", "1901", "190101", "190102", "20", "2001", "200101", "200102", "200103", "200104", "21", "2101", "210101", "210102", "210103", "210104", "22", "2201", "220101", "220102", "23", "2301", "230101", "230102", "24", "2401", "240101", "240102", "25", "2501", "250101", "250102", "26", "2601", "260101", "260102", "260103", "260104", "260105", "260106", "2602", "260201", "260202", "260203", "2603", "260301", "260302", "260303", "260304", "27", "2701", "270101", "270102"];
		expect(t.getAvailableCategories()).toEqual(allOutput);
	});
});
